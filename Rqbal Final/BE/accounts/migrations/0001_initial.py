# Generated by Django 5.1.4 on 2025-06-07 00:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم القاعة')),
                ('building', models.CharField(max_length=100, verbose_name='المبنى')),
                ('floor', models.CharField(max_length=50, verbose_name='الطابق')),
                ('capacity', models.IntegerField(verbose_name='السعة')),
                ('room_type', models.CharField(choices=[('lecture', 'قاعة محاضرات'), ('lab', 'معمل'), ('seminar', 'قاعة ندوات')], max_length=50, verbose_name='نوع القاعة')),
                ('has_projector', models.BooleanField(default=False, verbose_name='يوجد جهاز عرض')),
                ('has_computer', models.BooleanField(default=False, verbose_name='يوجد حاسوب')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
            ],
            options={
                'verbose_name': 'قاعة دراسية',
                'verbose_name_plural': 'القاعات الدراسية',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='كود المادة')),
                ('title', models.CharField(max_length=100, verbose_name='اسم المادة')),
                ('credit_hours', models.IntegerField(verbose_name='عدد الساعات المعتمدة')),
                ('department', models.CharField(max_length=100, verbose_name='القسم')),
                ('level', models.CharField(max_length=50, verbose_name='المستوى')),
            ],
            options={
                'verbose_name': 'المادة الدراسية',
                'verbose_name_plural': 'المواد الدراسية',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'مدير'), ('professor', 'أستاذ'), ('assistant', 'مساعد'), ('student', 'طالب')], default='admin', max_length=10, verbose_name='نوع المستخدم')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='الاسم الكامل')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الهاتف')),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الجوال')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('role', models.CharField(choices=[('super_admin', 'مدير عام'), ('academic_admin', 'مدير أكاديمي'), ('finance_admin', 'مدير مالي'), ('student_affairs', 'شؤون الطلاب'), ('registrar', 'مسجل'), ('it_admin', 'مدير نظم معلومات')], default='academic_admin', max_length=50, verbose_name='الدور الإداري')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='القسم')),
                ('image', models.ImageField(blank=True, null=True, upload_to='admin/profile_images/', verbose_name='صورة الشخصية')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='يمكنه إدارة المستخدمين')),
                ('can_manage_content', models.BooleanField(default=False, verbose_name='يمكنه إدارة المحتوى')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'ملف المدير',
                'verbose_name_plural': 'ملفات المديرين',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssistantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='الاسم الكامل')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الهاتف')),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الجوال')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('assistant_type', models.CharField(choices=[('teaching', 'مساعد تدريس'), ('research', 'مساعد بحث'), ('lab', 'مساعد معمل'), ('admin', 'مساعد إداري')], default='teaching', max_length=50, verbose_name='نوع المساعد')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='القسم')),
                ('college', models.CharField(blank=True, max_length=100, null=True, verbose_name='الكلية')),
                ('image', models.ImageField(blank=True, null=True, upload_to='assistants/images/', verbose_name='الصورة')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='المؤهلات')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('joined_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانضمام')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'ملف المساعد',
                'verbose_name_plural': 'ملفات المساعدين',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseAssistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=50, verbose_name='الفصل الدراسي')),
                ('year', models.CharField(max_length=4, verbose_name='السنة')),
                ('responsibilities', models.TextField(blank=True, null=True, verbose_name='المسؤوليات')),
                ('assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.assistantprofile', verbose_name='المساعد')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course', verbose_name='المقرر')),
            ],
            options={
                'verbose_name': 'مساعدة في المقرر',
                'verbose_name_plural': 'المساعدة في المقررات',
            },
        ),
        migrations.AddField(
            model_name='assistantprofile',
            name='supported_courses',
            field=models.ManyToManyField(related_name='assistants', through='accounts.CourseAssistance', to='accounts.course', verbose_name='المقررات المساعدة فيها'),
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=50, verbose_name='الفصل الدراسي')),
                ('year', models.CharField(max_length=4, verbose_name='السنة')),
                ('grade', models.CharField(blank=True, max_length=2, null=True, verbose_name='الدرجة')),
                ('status', models.CharField(choices=[('active', 'نشط'), ('dropped', 'منسحب'), ('completed', 'مكتمل'), ('failed', 'راسب'), ('incomplete', 'غير مكتمل')], default='active', max_length=20, verbose_name='الحالة')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ التسجيل')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='آخر تحديث')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course', verbose_name='المقرر')),
            ],
            options={
                'verbose_name': 'تسجيل في مقرر',
                'verbose_name_plural': 'التسجيل في المقررات',
                'ordering': ['-year', 'semester'],
            },
        ),
        migrations.CreateModel(
            name='CourseTeaching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=50, verbose_name='الفصل الدراسي')),
                ('year', models.CharField(max_length=4, verbose_name='السنة')),
                ('is_primary_instructor', models.BooleanField(default=True, verbose_name='المدرس الرئيسي')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course', verbose_name='المقرر')),
            ],
            options={
                'verbose_name': 'تدريس المقرر',
                'verbose_name_plural': 'تدريس المقررات',
            },
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='الاسم الكامل')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الهاتف')),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الجوال')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('academic_rank', models.CharField(choices=[('professor', 'أستاذ'), ('associate_professor', 'أستاذ مشارك'), ('assistant_professor', 'أستاذ مساعد'), ('lecturer', 'محاضر'), ('teaching_assistant', 'معيد')], default='lecturer', max_length=50, verbose_name='الرتبة الأكاديمية')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='التخصص')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='القسم')),
                ('college', models.CharField(blank=True, max_length=100, null=True, verbose_name='الكلية')),
                ('university', models.CharField(blank=True, max_length=100, null=True, verbose_name='الجامعة')),
                ('image', models.ImageField(blank=True, null=True, upload_to='professors/images/', verbose_name='الصورة')),
                ('cv', models.FileField(blank=True, null=True, upload_to='professors/cvs/', verbose_name='السيرة الذاتية')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='السيرة الذاتية المختصرة')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('joined_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانضمام')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('courses_taught', models.ManyToManyField(related_name='professors', through='accounts.CourseTeaching', to='accounts.course', verbose_name='المقررات التي يدرسها')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'ملف الأستاذ',
                'verbose_name_plural': 'ملفات الأساتذة',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='courseteaching',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.professorprofile', verbose_name='الأستاذ'),
        ),
        migrations.AddField(
            model_name='courseassistance',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.professorprofile', verbose_name='الأستاذ المشرف'),
        ),
        migrations.AddField(
            model_name='assistantprofile',
            name='professor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assistants', to='accounts.professorprofile', verbose_name='الأستاذ المشرف'),
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='الاسم الكامل')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='الوظيفة')),
                ('discount_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='سبب الخصم')),
                ('is_guardian', models.BooleanField(default=False, verbose_name='هل هو ولي أمر')),
                ('relationship_degree', models.CharField(blank=True, max_length=100, null=True, verbose_name='درجة القرابة')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='المدينة')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='الجنسية')),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم الأم')),
                ('home_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='هاتف المنزل')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='الجوال')),
                ('fax', models.CharField(blank=True, max_length=20, null=True, verbose_name='الفاكس')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('alternative_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='بريد إلكتروني بديل')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم الهاتف')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='واتساب')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='فيسبوك')),
                ('telegram', models.CharField(blank=True, max_length=100, null=True, verbose_name='تيليجرام')),
                ('instagram', models.CharField(blank=True, max_length=100, null=True, verbose_name='إنستجرام')),
                ('father_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم الأب')),
                ('father_education', models.CharField(blank=True, max_length=100, null=True, verbose_name='تعليم الأب')),
                ('father_job', models.CharField(blank=True, max_length=100, null=True, verbose_name='وظيفة الأب')),
                ('father_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='هاتف الأب')),
                ('father_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='واتساب الأب')),
                ('mother_education', models.CharField(blank=True, max_length=100, null=True, verbose_name='تعليم الأم')),
                ('mother_job', models.CharField(blank=True, max_length=100, null=True, verbose_name='وظيفة الأم')),
                ('mother_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='هاتف الأم')),
                ('mother_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='واتساب الأم')),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم الولي')),
                ('guardian_relationship', models.CharField(blank=True, max_length=100, null=True, verbose_name='صلة القرابة')),
                ('guardian_job', models.CharField(blank=True, max_length=100, null=True, verbose_name='وظيفة الولي')),
                ('guardian_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='هاتف الولي')),
                ('guardian_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='واتساب الولي')),
                ('joining_year', models.CharField(blank=True, max_length=10, null=True, verbose_name='عام الالتحاق')),
                ('school_ar', models.CharField(blank=True, max_length=255, null=True, verbose_name='المدرسة (عربي)')),
                ('school_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='المدرسة (إنجليزي)')),
                ('degree', models.CharField(blank=True, max_length=255, null=True, verbose_name='الدرجة العلمية')),
                ('graduation_year', models.CharField(blank=True, max_length=10, null=True, verbose_name='عام التخرج')),
                ('degree_round', models.CharField(blank=True, max_length=50, null=True, verbose_name='دورة التخرج')),
                ('total_grades', models.CharField(blank=True, max_length=10, null=True, verbose_name='المجموع الكلي')),
                ('exam_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='رقم الجلوس')),
                ('acceptance_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='نوع القبول')),
                ('issue_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='رقم الإصدار')),
                ('computer_serial', models.CharField(blank=True, max_length=50, null=True, verbose_name='الرقم التسلسلي')),
                ('second_language', models.CharField(blank=True, max_length=50, null=True, verbose_name='اللغة الثانية')),
                ('cumulative_gpa', models.FloatField(blank=True, null=True, verbose_name='المعدل التراكمي')),
                ('percentage', models.FloatField(blank=True, null=True, verbose_name='النسبة المئوية')),
                ('previous_degree', models.CharField(blank=True, max_length=255, null=True, verbose_name='الشهادة السابقة')),
                ('previous_degree_round', models.CharField(blank=True, max_length=100, null=True, verbose_name='دورة الشهادة السابقة')),
                ('previous_graduation_year', models.CharField(blank=True, max_length=10, null=True, verbose_name='عام التخرج السابق')),
                ('transfer_approval_date', models.DateField(blank=True, null=True, verbose_name='تاريخ موافقة النقل')),
                ('transfer_approval_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='رقم موافقة النقل')),
                ('transfer_from', models.CharField(blank=True, max_length=255, null=True, verbose_name='الانتقال من')),
                ('college', models.CharField(blank=True, max_length=100, null=True, verbose_name='الكلية')),
                ('program', models.CharField(blank=True, max_length=100, null=True, verbose_name='البرنامج')),
                ('level', models.CharField(blank=True, max_length=50, null=True, verbose_name='المستوى')),
                ('credit_hours', models.IntegerField(blank=True, null=True, verbose_name='عدد الساعات')),
                ('previous_year_gpa', models.FloatField(blank=True, null=True, verbose_name='معدل العام السابق')),
                ('previous_year_grade', models.CharField(blank=True, max_length=50, null=True, verbose_name='تقدير العام السابق')),
                ('arabic_project_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='مشروع التخرج بالعربي')),
                ('english_project_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='مشروع التخرج بالإنجليزي')),
                ('medical_report', models.TextField(blank=True, null=True, verbose_name='الكشف الطبي')),
                ('literacy_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='محو الأمية')),
                ('academic_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisees', to='accounts.professorprofile', verbose_name='المستشار الأكاديمي')),
                ('enrolled_courses', models.ManyToManyField(related_name='enrolled_students', through='accounts.CourseEnrollment', to='accounts.course', verbose_name='المقررات المسجلة')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'الملف الشخصي للطالب',
                'verbose_name_plural': 'الملفات الشخصية للطلاب',
            },
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.studentprofile', verbose_name='الطالب'),
        ),
        migrations.CreateModel(
            name='StudentSupervision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supervision_type', models.CharField(max_length=50, verbose_name='نوع الإشراف')),
                ('start_date', models.DateField(verbose_name='تاريخ البدء')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.professorprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.studentprofile')),
            ],
            options={
                'verbose_name': 'إشراف أكاديمي',
                'verbose_name_plural': 'إشرافات أكاديمية',
            },
        ),
        migrations.AddField(
            model_name='professorprofile',
            name='supervised_students',
            field=models.ManyToManyField(related_name='supervisors', through='accounts.StudentSupervision', to='accounts.studentprofile', verbose_name='الطلاب المشرف عليهم'),
        ),
        migrations.CreateModel(
            name='StudentSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_type', models.CharField(max_length=50, verbose_name='نوع الدعم')),
                ('start_date', models.DateField(verbose_name='تاريخ البدء')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.assistantprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.studentprofile')),
            ],
            options={
                'verbose_name': 'دعم طلابي',
                'verbose_name_plural': 'دعم طلابي',
            },
        ),
        migrations.AddField(
            model_name='assistantprofile',
            name='supported_students',
            field=models.ManyToManyField(related_name='support_assistants', through='accounts.StudentSupport', to='accounts.studentprofile', verbose_name='الطلاب المساعد لهم'),
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='وقت البداية')),
                ('end_time', models.TimeField(verbose_name='وقت النهاية')),
                ('slot_type', models.CharField(choices=[('lecture', 'محاضرة'), ('lab', 'معمل'), ('office_hours', 'ساعات مكتبية'), ('seminar', 'ندوة')], default='lecture', max_length=20, verbose_name='نوع الموعد')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
            ],
            options={
                'verbose_name': 'موعد',
                'verbose_name_plural': 'المواعيد',
                'ordering': ['start_time'],
                'unique_together': {('start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='StudySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('saturday', 'السبت'), ('sunday', 'الأحد'), ('monday', 'الاثنين'), ('tuesday', 'الثلاثاء'), ('wednesday', 'الأربعاء'), ('thursday', 'الخميس')], max_length=20, verbose_name='اليوم')),
                ('semester', models.CharField(choices=[('first', 'الفصل الأول'), ('second', 'الفصل الثاني'), ('summer', 'الفصل الصيفي')], max_length=20, verbose_name='الفصل الدراسي')),
                ('academic_year', models.CharField(help_text='مثال: 2023-2024', max_length=9, verbose_name='العام الدراسي')),
                ('max_students', models.IntegerField(help_text='الحد الأقصى لعدد الطلاب المسموح به في هذا الموعد', verbose_name='الحد الأقصى للطلاب')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('assistants', models.ManyToManyField(blank=True, related_name='assisting_schedules', to='accounts.assistantprofile', verbose_name='المساعدون')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='accounts.classroom', verbose_name='القاعة')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='accounts.course', verbose_name='المقرر')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_schedules', to='accounts.adminprofile', verbose_name='تم الإنشاء بواسطة')),
                ('enrolled_students', models.ManyToManyField(blank=True, related_name='class_schedules', to='accounts.studentprofile', verbose_name='الطلاب المسجلون')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_schedules', to='accounts.professorprofile', verbose_name='الأستاذ')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='accounts.timeslot', verbose_name='الموعد')),
            ],
            options={
                'verbose_name': 'جدول دراسي',
                'verbose_name_plural': 'الجداول الدراسية',
                'ordering': ['semester', 'day', 'time_slot'],
                'unique_together': {('classroom', 'day', 'time_slot', 'semester', 'academic_year'), ('professor', 'day', 'time_slot', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('cancellation', 'إلغاء'), ('reschedule', 'إعادة جدولة'), ('room_change', 'تغيير القاعة'), ('professor_change', 'تغيير الأستاذ')], max_length=20, verbose_name='نوع التغيير')),
                ('new_date', models.DateField(blank=True, null=True, verbose_name='التاريخ الجديد')),
                ('reason', models.TextField(verbose_name='سبب التغيير')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='تم إرسال الإشعار')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_changes', to='accounts.adminprofile', verbose_name='تم الإنشاء بواسطة')),
                ('new_classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_changes', to='accounts.classroom', verbose_name='القاعة الجديدة')),
                ('new_professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_changes', to='accounts.professorprofile', verbose_name='الأستاذ الجديد')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='accounts.studyschedule', verbose_name='الجدول الدراسي')),
                ('new_time_slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_changes', to='accounts.timeslot', verbose_name='الموعد الجديد')),
            ],
            options={
                'verbose_name': 'تغيير في الجدول',
                'verbose_name_plural': 'تغييرات الجدول',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='courseteaching',
            unique_together={('professor', 'course', 'semester', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='courseassistance',
            unique_together={('assistant', 'course', 'semester', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course', 'semester', 'year')},
        ),
    ]
